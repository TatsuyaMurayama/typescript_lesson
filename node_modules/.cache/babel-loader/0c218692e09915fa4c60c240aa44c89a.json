{"ast":null,"code":"var _jsxFileName = \"/Users/tt-murayama/development/React/typescript_lesson/src/TestCompornent.tsx\",\n    _s = $RefreshSig$();\n\n//raと入力すると、rafceが出てきて、アロー関数の関数コンポーネントのテンプレートを出せる\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TestCompornent = props => {\n  _s();\n\n  const [count, setCount] = useState(null);\n  const [user, setUser] = useState({\n    id: 1,\n    name: \"dummy\"\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TestCompornent, \"yIs7l4m+2USyWosOexU+6j2y9nk=\");\n\n_c = TestCompornent;\nexport default TestCompornent;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestCompornent\");","map":{"version":3,"sources":["/Users/tt-murayama/development/React/typescript_lesson/src/TestCompornent.tsx"],"names":["React","useState","TestCompornent","props","count","setCount","user","setUser","id","name","text"],"mappings":";;;AAAA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAWA,MAAMC,cAA8B,GAAIC,KAAD,IAAW;AAAA;;AAC9C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAgB,IAAhB,CAAlC;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAW;AAACO,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE;AAAd,GAAX,CAAhC;AACA,sBACI;AAAA,4BACI;AAAA,gBACKN,KAAK,CAACO;AADX;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAA,gBACKN;AADL;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAbD;;GAAMF,c;;KAAAA,c;AAeN,eAAeA,cAAf","sourcesContent":["//raと入力すると、rafceが出てきて、アロー関数の関数コンポーネントのテンプレートを出せる\n\nimport React, { useState } from 'react'\n\ninterface Props {\n    text: string;\n}\n\ninterface UserData {\n    id:number;\n    name:string;\n}\n\nconst TestCompornent:React.FC<Props> = (props) => {\n    const [count, setCount] = useState<number | null>(null);\n    const [user, setUser] = useState<UserData>({id: 1, name: \"dummy\"})\n    return (\n        <div>\n            <h1>\n                {props.text}\n            </h1>\n            <h1>\n                {count}\n            </h1>\n        </div>\n    )\n}\n\nexport default TestCompornent\n\n"]},"metadata":{},"sourceType":"module"}